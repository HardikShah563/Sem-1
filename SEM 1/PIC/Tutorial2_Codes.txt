#include <stdio.h>
int getMissingNo(int a[], int n)
{
    int i, total;
    total = (n + 1) * (n + 2) / 2;
    for (i = 0; i < n; i++)
        total -= a[i];
    return total;
}
int main()
{
    int a[] = { 1, 2, 3, 5, 6 };
    int miss = getMissingNo(a, 5);
    printf("%d", miss);
    getchar();
}
===============================================
#include <stdio.h>
int main()
{
    int arr[] = {1,2,3,4,5,6};

    int length = sizeof(arr)/sizeof(arr[0]);

    int fr[length];
    int visited = -1;

    for(int i = 0; i < length; i++){
        int count = 1;
        for(int j = i+1; j < length; j++){
            if(arr[i] == arr[j]){
                count++;
                fr[j] = visited;
            }
        }
        if(fr[i] != visited)
            fr[i] = count;
    }
    printf(" Element | Frequency\n");
    for(int i = 0; i < length; i++){
        if(fr[i] != visited){
            printf("    %d", arr[i]);
            printf("    |  ");
            printf("  %d\n", fr[i]);
        }
    }
    printf("-\n");
    return 0;
}
=================================================
#include<stdio.h>
int main()
{
    int invalue[]={1,2,3,4,5,6};
    int num_value=6;
    float tot=0;
    float mean=0;
    for(int i=0; i<num_value; i++)
    {
        tot = tot+invalue[i];
    }
    mean = tot/num_value;
    printf("The mean value is: %.1f",mean);
    float median = 0;
    float mid=0;
    if(num_value%2 == 0)
    {
        int temp=(num_value/2)-1;
        for(int i=0;i<num_value;i++)
        {
            if(temp==i || (temp+1)==i)
            {
                mid=mid+invalue[i];
            }
        }
        mid=mid/2;
        printf("Median value is: %.1f",mid);
    }
    else
    {
        int temp=(num_value/2);
        for(int i=0;i<num_value;i++)
        {
            if(temp==i)
            {
                int mid=invalue[i];
                printf("Median value: %d",mid);
            }
        }
    }
    int i, j,z, tmp, maxCount, modeValue;
    int tally[num_value];
    for(i=0;i<num_value;i++)
    {
        for(j=0;j<num_value-i;j++)
        {
            if(invalue[j]>invalue[j+1])
            {
                tmp=invalue[j];
                invalue[j]=invalue[j+1];
                invalue[j+1]=tmp;
            }
        }
    }
    for (i = 0; i < num_value; i++)
    {
        for(z=i+1;z<num_value;z++)
        {

            if(invalue[i]==invalue[z])
            {
                tally[i]++;
            }
        }
    }
    maxCount = 0;
    modeValue = 0;
    for (i = 1; i <= num_value; i++)
    {
        if (tally[i] > maxCount)
        {
            maxCount = tally[i];
            modeValue = invalue[i];
        }
    }
    printf("\nMode value is : %d", modeValue);
    return 0;
}
============================================================
 #include<stdio.h>
 #define N 10
 int main ()
 {
      int a[N],i,key,count=0;
      printf("enter %d integer numbers \n",N);
      for ( i=0;i<N;i++)
        scanf("%d",&a[i]);
      printf("enter the number that is to be searched \n");
        scanf("%d",&key);
        printf("\n");
    for (i=0;i<N;i++)
    {
        if (a[i]==key)
        {
            printf("%d has has appeared in the position %d in the array \n",key,i+1);
            count++;
        }
    }
      printf("\n final result: %d has appeared %d times in the array \n",key,count);
      printf("\n");
 }
=============================================================



